
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.sql.*;
import Project.ConnectionProvider;
import java.awt.Color;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author saiprasoona
 */
public class CheckOut extends javax.swing.JFrame {

    /**
     * Creates new form CheckOut
     */
    static String uID;
    static int wallet;
    public CheckOut(String userID,int w) {
        initComponents();
        uID=userID;
        wallet=w;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jSpinField1 = new com.toedter.components.JSpinField();
        jLabel4 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Optima", 1, 24)); // NOI18N
        jLabel2.setText("Book ID");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, -1, -1));

        jTextField1.setFont(new java.awt.Font("Optima", 1, 24)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 100, 200, -1));

        jButton1.setFont(new java.awt.Font("Optima", 1, 24)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon("/Users/saiprasoona/OOPS PROJECT/request/1x/baseline_send_black_36dp.png")); // NOI18N
        jButton1.setText("Request");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 520, -1, -1));

        jButton2.setFont(new java.awt.Font("Optima", 1, 24)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon("/Users/saiprasoona/OOPS PROJECT/close/1x/baseline_cancel_black_36dp.png")); // NOI18N
        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 520, -1, -1));

        jButton3.setFont(new java.awt.Font("Optima", 1, 24)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon("/Users/saiprasoona/OOPS PROJECT/search/1x/baseline_search_black_36dp.png")); // NOI18N
        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 230, -1, -1));

        jTextField3.setFont(new java.awt.Font("Optima", 1, 24)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(0, 153, 51));
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 320, 1140, -1));

        jButton4.setFont(new java.awt.Font("Optima", 1, 24)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon("/Users/saiprasoona/OOPS PROJECT/reserve/1x/baseline_pending_actions_black_36dp.png")); // NOI18N
        jButton4.setText("Reserve");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 520, -1, -1));

        jLabel5.setFont(new java.awt.Font("Optima", 1, 24)); // NOI18N
        jLabel5.setText("Duration");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 400, 100, 40));
        getContentPane().add(jSpinField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 410, 200, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon("/Users/saiprasoona/OOPS PROJECT/images/ss 2022-04-26 at 12.47.11 AM.png")); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-30, -310, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       
        String bookID = jTextField1.getText();
        int dur = jSpinField1.getValue();
        if(dur>15 || dur<=0){
            JOptionPane.showMessageDialog(null, "Duration cannot be more than 15 days or less than 1 day");
//            setVisible(false);
//            new CheckOut(uID,wallet).setVisible(true);
            return;
        }
        if((wallet)<100){
            JOptionPane.showMessageDialog(null, "Money in your wallet is insufficient");
            new Wallet(uID,wallet).setVisible(true);
            return;
        }
        
        try{
            Connection con = ConnectionProvider.getCon();
            Statement st =con.createStatement();
            ResultSet rs = st.executeQuery("select *from book where bookID='"+bookID+"'");
            if(rs.next()){
           
                String owner = rs.getString(9);
                String s= rs.getString(7);
                ResultSet rs1 = st.executeQuery("select *from users where userID='"+uID+"'");
                if(rs1.next() && s.equals("available") ){
                   
                    st.executeUpdate("insert into req values ('"+uID+"','"+bookID+"','"+owner+"','"+dur+"')");
                    JOptionPane.showMessageDialog(null, "Successfully requested");
                    setVisible(false);
                    new CheckOut(uID,wallet).setVisible(true);
                    return;
                }
                else{
                    JOptionPane.showMessageDialog(null, "This book cannot be requested");
                    return;
                }
//                    new Messages(owner,bookID,issueDate,time,place);
                    
                    
                
            
            }
            else{
                JOptionPane.showMessageDialog(null, "Incorrect BookID");
                
            }
        }
        catch(SQLException e){
            e.printStackTrace(); 
            JOptionPane.showMessageDialog(null, "Connection Error");
        }
        
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new newUser(uID, wallet).setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String bookID = jTextField1.getText();
       
        try{
            Connection con = ConnectionProvider.getCon();
            Statement st =con.createStatement();
            ResultSet rs = st.executeQuery("select *from book where bookID='"+bookID+"'");
            if(rs.next()){
                       System.out.println(rs.getString(7));
                    if(rs.getString(7).equals("available")){
                        jTextField3.setText("The book is available! Please fill the below details to continue");
                        jTextField3.setForeground(Color.green);
                        jButton4.setEnabled(false);
                        jButton1.setEnabled(true);
                               
                        
                    }
                    else if(rs.getString(7).equals("lended")){
//                        JOptionPane.showMessageDialog(null, "The book has been lended, if you want to reserve it, please click on reserve below");
                        jTextField3.setText("The book has been lended, if you want to reserve it, please click on reserve below");
                        jTextField3.setForeground(Color.ORANGE);
                        jButton1.setEnabled(false);
                        jButton4.setEnabled(true);
                    }
                    else{
                       JOptionPane.showMessageDialog(null, "The book is not available");
                        setVisible(false);
                        new newUser(uID,wallet).setVisible(true);
                    }
                ResultSet rs1 = st.executeQuery("select *from users where userID='"+uID+"'");
                if(!rs1.next()){
                    JOptionPane.showMessageDialog(null, "Incorrect UserID");
                }
               
            }
            else{
                JOptionPane.showMessageDialog(null, "Incorrect BookID or UserID");
                
            }
        }
        catch(SQLException e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Connection Error");
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String bookID= jTextField1.getText();
        
        if(bookID.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter a book ID");
        }
        try{
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select *from book where bookID='"+bookID+"'");
            
            int priority=0;
            if(rs.next() && rs.getString(7).equals("lended")){
                String owner = rs.getString(9);
//                System.out.println(priority+" is priority");
                ResultSet rs1 = st.executeQuery("select *from reserve where bookID='"+bookID+"'");
                while(rs1.next()){
//                    System.out.println(priority+" is priority");
                    priority=Math.max(priority, Integer.parseInt(rs1.getString(3)));
                }
                priority++;
                 st.executeUpdate("insert into reserve values ('"+uID+"','"+bookID+"','"+priority+"','"+owner+"')");
                JOptionPane.showMessageDialog(null, "Successfully reserved, you are on position "+priority+" to get the book");
                return;
            }
            else{
                JOptionPane.showMessageDialog(null, "Invalid Book ID");
            }
           
                    
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Connection Error");
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckOut(uID,wallet).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private com.toedter.components.JSpinField jSpinField1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
